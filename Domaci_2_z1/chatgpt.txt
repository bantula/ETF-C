#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Node {
    char data[50];
    struct Node* next;
};

void insert(struct Node** head, char data[]) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    strcpy(newNode->data, data);
    newNode->next = NULL;

    if (*head == NULL) {
        *head = newNode;
    } else {
        struct Node* current = *head;
        while (current->next != NULL) {
            current = current->next;
        }
        current->next = newNode;
    }
}

void swap(char a[], char b[]) {
    char temp[50];
    strcpy(temp, a);
    strcpy(a, b);
    strcpy(b, temp);
}

void sortLinkedList(struct Node* head) {
    int swapped;
    struct Node* current;
    struct Node* nextNode = NULL;

    if (head == NULL)
        return;

    do {
        swapped = 0;
        current = head;

        while (current->next != nextNode) {
            if (strcmp(current->data, current->next->data) > 0) {
                swap(current->data, current->next->data);
                swapped = 1;
            }
            current = current->next;
        }
        nextNode = current;
    } while (swapped);
}

void display(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%s -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

void freeList(struct Node** head) {
    struct Node* current = *head;
    struct Node* nextNode;
    while (current != NULL) {
        nextNode = current->next;
        free(current);
        current = nextNode;
    }
    *head = NULL;
}

int main() {
    struct Node* head = NULL;

    insert(&head, "orange");
    insert(&head, "apple");
    insert(&head, "banana");
    insert(&head, "grape");
    insert(&head, "kiwi");

    printf("Original Linked List: ");
    display(head);

    sortLinkedList(head);

    printf("Sorted Linked List: ");
    display(head);

    freeList(&head);

    return 0;
}

